local player = game.Players.LocalPlayer
local backpack = player:WaitForChild("Backpack")
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local remote = game:GetService("ReplicatedStorage").Remotes.ItemSell

local keyword = "kg"
local MIN_VALUE = 900

-- ====== –ù–ê–°–¢–†–û–ô–ö–ò GUI ======
local guiEnabled = true
local sellingActive = false
local buyingActive = false
local gearingActive = false

-- ====== –°–û–ó–î–ê–ù–ò–ï GUI ======
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "AutoSellGUI"
screenGui.Parent = player.PlayerGui

-- –ö–Ω–æ–ø–∫–∞ –ø–æ–∫–∞–∑–∞/—Å–∫—Ä—ã—Ç–∏—è (Minimize) - —Ç–µ–ø–µ—Ä—å —Ç–æ–∂–µ –ø–µ—Ä–µ–º–µ—â–∞–µ–º–∞—è
local miniButton = Instance.new("TextButton")
miniButton.Size = UDim2.new(0, 30, 0, 30)
miniButton.Position = UDim2.new(0, 10, 0, 10)
miniButton.BackgroundColor3 = Color3.fromRGB(60, 60, 200)
miniButton.Text = "M"
miniButton.TextColor3 = Color3.fromRGB(255, 255, 255)
miniButton.TextScaled = true
miniButton.Font = Enum.Font.GothamBold
miniButton.ZIndex = 10
miniButton.Parent = screenGui

local miniCorner = Instance.new("UICorner")
miniCorner.CornerRadius = UDim.new(1, 0)
miniCorner.Parent = miniButton

-- –û—Å–Ω–æ–≤–Ω–æ–π —Ñ—Ä–µ–π–º
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 200, 0, 160) -- –£–≤–µ–ª–∏—á–∏–ª–∏ –≤—ã—Å–æ—Ç—É –¥–ª—è –Ω–æ–≤–æ–π –∫–Ω–æ–ø–∫–∏
mainFrame.Position = UDim2.new(0, 50, 0, 10)
mainFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
mainFrame.BorderSizePixel = 2
mainFrame.BorderColor3 = Color3.fromRGB(80, 80, 80)
mainFrame.Visible = true
mainFrame.Parent = screenGui

local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0, 8)
corner.Parent = mainFrame

-- –ó–∞–≥–æ–ª–æ–≤–æ–∫ –¥–ª—è –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è
local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, 0, 0, 25)
title.Position = UDim2.new(0, 0, 0, 0)
title.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
title.Text = "AUTO FARM"
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.TextScaled = true
title.Font = Enum.Font.GothamBold
title.Parent = mainFrame

local titleCorner = Instance.new("UICorner")
titleCorner.CornerRadius = UDim.new(0, 8)
titleCorner.Parent = title

-- –ö—Ä–µ—Å—Ç–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è
local closeButton = Instance.new("TextButton")
closeButton.Size = UDim2.new(0, 20, 0, 20)
closeButton.Position = UDim2.new(1, -25, 0, 2)
closeButton.BackgroundColor3 = Color3.fromRGB(200, 60, 60)
closeButton.Text = "X"
closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
closeButton.TextScaled = true
closeButton.Font = Enum.Font.GothamBold
closeButton.ZIndex = 2
closeButton.Parent = title

local closeCorner = Instance.new("UICorner")
closeCorner.CornerRadius = UDim.new(0, 4)
closeCorner.Parent = closeButton

-- –ö–Ω–æ–ø–∫–∞ –∞–≤—Ç–æ–ø—Ä–æ–¥–∞–∂–∏
local toggleButton = Instance.new("TextButton")
toggleButton.Size = UDim2.new(0.8, 0, 0, 30)
toggleButton.Position = UDim2.new(0.1, 0, 0.2, 0)
toggleButton.BackgroundColor3 = Color3.fromRGB(200, 60, 60) -- –∫—Ä–∞—Å–Ω—ã–π –≤—ã–∫–ª—é—á–µ–Ω
toggleButton.Text = "AUTOSELL: OFF"
toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleButton.TextScaled = true
toggleButton.Font = Enum.Font.GothamBold
toggleButton.Parent = mainFrame

local buttonCorner = Instance.new("UICorner")
buttonCorner.CornerRadius = UDim.new(0, 6)
buttonCorner.Parent = toggleButton

-- –ö–Ω–æ–ø–∫–∞ –∞–≤—Ç–æ–ø–æ–∫—É–ø–∫–∏ —Å–µ–º—è–Ω
local buyButton = Instance.new("TextButton")
buyButton.Size = UDim2.new(0.8, 0, 0, 30)
buyButton.Position = UDim2.new(0.1, 0, 0.4, 0)
buyButton.BackgroundColor3 = Color3.fromRGB(200, 60, 60) -- –∫—Ä–∞—Å–Ω—ã–π –≤—ã–∫–ª—é—á–µ–Ω
buyButton.Text = "AUTOBUY: OFF"
buyButton.TextColor3 = Color3.fromRGB(255, 255, 255)
buyButton.TextScaled = true
buyButton.Font = Enum.Font.GothamBold
buyButton.Parent = mainFrame

local buyButtonCorner = Instance.new("UICorner")
buyButtonCorner.CornerRadius = UDim.new(0, 6)
buyButtonCorner.Parent = buyButton

-- –ù–æ–≤–∞—è –∫–Ω–æ–ø–∫–∞ –∞–≤—Ç–æ–ø–æ–∫—É–ø–∫–∏ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏—è
local gearButton = Instance.new("TextButton")
gearButton.Size = UDim2.new(0.8, 0, 0, 30)
gearButton.Position = UDim2.new(0.1, 0, 0.6, 0)
gearButton.BackgroundColor3 = Color3.fromRGB(200, 60, 60) -- –∫—Ä–∞—Å–Ω—ã–π –≤—ã–∫–ª—é—á–µ–Ω
gearButton.Text = "AUTOGEAR: OFF"
gearButton.TextColor3 = Color3.fromRGB(255, 255, 255)
gearButton.TextScaled = true
gearButton.Font = Enum.Font.GothamBold
gearButton.Parent = mainFrame

local gearButtonCorner = Instance.new("UICorner")
gearButtonCorner.CornerRadius = UDim.new(0, 6)
gearButtonCorner.Parent = gearButton

-- ====== –ü–ï–†–ï–ú–ï–©–ï–ù–ò–ï GUI ======
local dragging = false
local miniDragging = false
local dragInput, dragStart, startPos, miniStartPos

-- –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ñ—Ä–µ–π–º–∞
local function update(input)
    local delta = input.Position - dragStart
    mainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

-- –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∏ M
local function updateMini(input)
    local delta = input.Position - dragStart
    miniButton.Position = UDim2.new(miniStartPos.X.Scale, miniStartPos.X.Offset + delta.X, miniStartPos.Y.Scale, miniStartPos.Y.Offset + delta.Y)
end

-- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ñ—Ä–µ–π–º–∞
title.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = mainFrame.Position
        
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

-- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–∫–∏ M
miniButton.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        miniDragging = true
        dragStart = input.Position
        miniStartPos = miniButton.Position
        
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                miniDragging = false
            end
        end)
    end
end)

title.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement and dragging then
        dragInput = input
    end
end)

miniButton.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement and miniDragging then
        dragInput = input
    end
end)

game:GetService("UserInputService").InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        update(input)
    elseif input == dragInput and miniDragging then
        updateMini(input)
    end
end)

-- ====== –§–£–ù–ö–¶–ò–ò GUI ======
local function updateButtons()
    -- –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –∞–≤—Ç–æ–ø—Ä–æ–¥–∞–∂–∏
    if sellingActive then
        toggleButton.BackgroundColor3 = Color3.fromRGB(60, 200, 80) -- –∑–µ–ª–µ–Ω—ã–π –≤–∫–ª—é—á–µ–Ω
        toggleButton.Text = "AUTOSELL: ON"
    else
        toggleButton.BackgroundColor3 = Color3.fromRGB(200, 60, 60) -- –∫—Ä–∞—Å–Ω—ã–π –≤—ã–∫–ª—é—á–µ–Ω
        toggleButton.Text = "AUTOSELL: OFF"
    end
    
    -- –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –∞–≤—Ç–æ–ø–æ–∫—É–ø–∫–∏
    if buyingActive then
        buyButton.BackgroundColor3 = Color3.fromRGB(60, 200, 80) -- –∑–µ–ª–µ–Ω—ã–π –≤–∫–ª—é—á–µ–Ω
        buyButton.Text = "AUTOBUY: ON"
    else
        buyButton.BackgroundColor3 = Color3.fromRGB(200, 60, 60) -- –∫—Ä–∞—Å–Ω—ã–π –≤—ã–∫–ª—é—á–µ–Ω
        buyButton.Text = "AUTOBUY: OFF"
    end
    
    -- –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –∞–≤—Ç–æ–ø–æ–∫—É–ø–∫–∏ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏—è
    if gearingActive then
        gearButton.BackgroundColor3 = Color3.fromRGB(60, 200, 80) -- –∑–µ–ª–µ–Ω—ã–π –≤–∫–ª—é—á–µ–Ω
        gearButton.Text = "AUTOGEAR: ON"
    else
        gearButton.BackgroundColor3 = Color3.fromRGB(200, 60, 60) -- –∫—Ä–∞—Å–Ω—ã–π –≤—ã–∫–ª—é—á–µ–Ω
        gearButton.Text = "AUTOGEAR: OFF"
    end
end

local function toggleGUI()
    mainFrame.Visible = not mainFrame.Visible
    if mainFrame.Visible then
        miniButton.BackgroundColor3 = Color3.fromRGB(60, 60, 200) -- —Å–∏–Ω–∏–π –∫–æ–≥–¥–∞ –≤–∏–¥–Ω–æ
        miniButton.Text = "M"
    else
        miniButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80) -- —Å–µ—Ä—ã–π –∫–æ–≥–¥–∞ —Å–∫—Ä—ã—Ç–æ
        miniButton.Text = "M"
    end
end

-- –§—É–Ω–∫—Ü–∏—è –ø–æ–ª–Ω–æ–≥–æ –∑–∞–∫—Ä—ã—Ç–∏—è GUI
local function closeGUI()
    -- –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã
    sellingActive = false
    buyingActive = false
    gearingActive = false
    
    -- –°–∫—Ä—ã–≤–∞–µ–º –æ–±–∞ —ç–ª–µ–º–µ–Ω—Ç–∞
    mainFrame.Visible = false
    miniButton.Visible = false
    
    print("üî¥ GUI –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–∫—Ä—ã—Ç–∞, –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
end

-- ====== –ê–í–¢–û–ü–û–ö–£–ü–ö–ê –°–ï–ú–Ø–ù ======
local seeds = {
    "Cactus Seed",
    "Strawberry Seed", 
    "Pumpkin Seed",
    "Sunflower Seed",
    "Dragon Fruit Seed",
    "Eggplant Seed",
    "Watermelon Seed",
    "Grape Seed",
    "Cocotank Seed",
    "Carnivorus Plant Seed",
    "Mr Carrot Seed",
    "Tomatrio Seed",
    "Shroombino Seed"
}

local function autoBuyLoop()
    if not buyingActive then return end
    
    print("üõí –ó–ê–ü–£–°–ö –ê–í–¢–û–ü–û–ö–£–ü–ö–ò –°–ï–ú–Ø–ù")
    
    local seedIndex = 1
    
    while buyingActive do
        local seed = seeds[seedIndex]
        game:GetService("ReplicatedStorage").Remotes.BuyItem:FireServer(seed)
        print(("üå± –ö—É–ø–ª–µ–Ω–æ: %s"):format(seed))
        
        seedIndex = seedIndex + 1
        if seedIndex > #seeds then
            seedIndex = 1
        end
        
        -- –ñ–¥–µ–º 0.5 —Å–µ–∫—É–Ω–¥—ã –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –ø–æ–∫—É–ø–∫–æ–π
        for i = 1, 5 do
            if not buyingActive then break end
            task.wait(0.1)
        end
    end
    
    print("üõë –ê–í–¢–û–ü–û–ö–£–ü–ö–ê –û–°–¢–ê–ù–û–í–õ–ï–ù–ê")
end

-- ====== –ê–í–¢–û–ü–û–ö–£–ü–ö–ê –°–ù–ê–†–Ø–ñ–ï–ù–ò–Ø ======
local gearItems = {
    "Water Bucket",
    "Frost Grenade", 
    "Frost Blower",
    "Carrot Launcher"
}

local function autoGearLoop()
    if not gearingActive then return end
    
    print("üéí –ó–ê–ü–£–°–ö –ê–í–¢–û–ü–û–ö–£–ü–ö–ò –°–ù–ê–†–Ø–ñ–ï–ù–ò–Ø")
    
    local gearIndex = 1
    
    while gearingActive do
        local gear = gearItems[gearIndex]
        game:GetService("ReplicatedStorage").Remotes.BuyGear:FireServer(gear)
        print(("üéØ –ö—É–ø–ª–µ–Ω–æ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ: %s"):format(gear))
        
        gearIndex = gearIndex + 1
        if gearIndex > #gearItems then
            gearIndex = 1
        end
        
        -- –ñ–¥–µ–º 0.5 —Å–µ–∫—É–Ω–¥—ã –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –ø–æ–∫—É–ø–∫–æ–π
        for i = 1, 5 do
            if not gearingActive then break end
            task.wait(0.1)
        end
    end
    
    print("üõë –ê–í–¢–û–ü–û–ö–£–ü–ö–ê –°–ù–ê–†–Ø–ñ–ï–ù–ò–Ø –û–°–¢–ê–ù–û–í–õ–ï–ù–ê")
end

-- ====== —Ñ—É–Ω–∫—Ü–∏—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–æ–≤ ======
local function extractTexts(tool)
    local texts = {}
    for _, d in ipairs(tool:GetDescendants()) do
        if d:IsA("BillboardGui") or d:IsA("SurfaceGui") then
            for _, g in ipairs(d:GetDescendants()) do
                if (g:IsA("TextLabel") or g:IsA("TextBox") or g:IsA("TextButton")) and g.Text and g.Text ~= "" then
                    table.insert(texts, g.Text)
                end
            end
        elseif d:IsA("StringValue") and d.Value ~= "" then
            table.insert(texts, d.Value)
        end
    end
    return texts
end

-- ====== –ø–æ–ª—É—á–∏—Ç—å —á–∏—Å–ª–æ –∏–∑ —Ç–µ–∫—Å—Ç–∞ ======
local function extractValue(texts)
    for _, t in ipairs(texts) do
        -- –ò—â–µ–º —á–∏—Å–ª–æ —Å –≤–æ–∑–º–æ–∂–Ω–æ–π –±—É–∫–≤–æ–π k, M, B –∏ —Ç.–¥.
        local num, suffix = string.match(t, "%$([%d%.]+)([kKmMbB]?)")
        if num then
            local value = tonumber(num)
            if suffix then
                suffix = suffix:lower()
                if suffix == "k" then
                    value = value * 1000
                elseif suffix == "m" then
                    value = value * 1000000
                elseif suffix == "b" then
                    value = value * 1000000000
                end
            end
            return value, t -- –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–∞–∫–∂–µ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –∫–æ–Ω—Å–æ–ª–∏
        end
    end
    return nil, nil
end

-- ====== –±—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤ ======
local function getItemsToSell()
    local items = {}
    for _, tool in ipairs(backpack:GetChildren()) do
        if tool:IsA("Tool") and string.find(tool.Name:lower(), keyword:lower()) then
            local success, value = pcall(function()
                return extractValue(extractTexts(tool))
            end)
            
            if success and value and value < MIN_VALUE then
                table.insert(items, {tool = tool, value = value})
            end
        end
    end
    return items
end

-- ====== –±—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–¥–∞–∂–∞ ======
local function sellItem(tool)
    if not sellingActive then return false end
    
    -- –°–Ω–∏–º–∞–µ–º —Ç–µ–∫—É—â–∏–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –º–≥–Ω–æ–≤–µ–Ω–Ω–æ
    if character:FindFirstChildOfClass("Tool") then
        humanoid:UnequipTools()
    end
    
    -- –≠–∫–∏–ø–∏—Ä—É–µ–º –∏ —Å—Ä–∞–∑—É –ø—Ä–æ–¥–∞—ë–º
    pcall(function()
        humanoid:EquipTool(tool)
    end)
    
    -- –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞
    task.wait(0.1)
    
    remote:FireServer(true)
    return true
end

local function monitorEquipped(tool)
    if not tool:IsA("Tool") then return end

    tool.Equipped:Connect(function()
        local success, value, displayText = pcall(function()
            return extractValue(extractTexts(tool))
        end)

        if success and displayText then
            print(("üéí –í—ã –≤–∑—è–ª–∏ –≤ —Ä—É–∫—É: %s (%s)"):format(tool.Name, displayText))
        end
    end)
end

for _, tool in ipairs(backpack:GetChildren()) do
    monitorEquipped(tool)
end

-- –ü–æ–¥–∫–ª—é—á–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –¥–ª—è –Ω–æ–≤—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è –≤ —Ä—é–∫–∑–∞–∫
backpack.ChildAdded:Connect(function(child)
    if child:IsA("Tool") then
        monitorEquipped(child)
    end
end)

-- ====== –æ—Å–Ω–æ–≤–Ω–∞—è –±—ã—Å—Ç—Ä–∞—è –ø–µ—Ç–ª—è ======
local function fastSellLoop()
    if not sellingActive then return end
    
    print("‚ö° –ó–ê–ü–£–°–ö –ë–´–°–¢–†–û–ô –ü–†–û–î–ê–ñ–ò")
    
    local totalSold = 0
    
    while sellingActive do
        local itemsToSell = getItemsToSell()
        
        if #itemsToSell == 0 then
            print("‚úÖ –í–°–ï –ü–†–ï–î–ú–ï–¢–´ ‚â• $" .. MIN_VALUE)
            print("üéØ –ü—Ä–æ–¥–∞–Ω–æ –≤—Å–µ–≥–æ: " .. totalSold)
            break
        end
        
        -- –ü—Ä–æ–¥–∞—ë–º –≤—Å–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã –ø–æ–¥—Ä—è–¥ –±–µ–∑ –ª–∏—à–Ω–∏—Ö –æ–∂–∏–¥–∞–Ω–∏–π
        for _, item in ipairs(itemsToSell) do
            if not sellingActive then break end
            
            print(("‚ö° –ü—Ä–æ–¥–∞—ë–º: %s ($%d/s)"):format(item.tool.Name, item.value))
            
            if sellItem(item.tool) then
                totalSold = totalSold + 1
                print(("‚úÖ –ü—Ä–æ–¥–∞–Ω–æ: %s | –í—Å–µ–≥–æ: %d"):format(item.tool.Name, totalSold))
            end
            
            -- –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –ø—Ä–æ–¥–∞–∂–∞–º–∏ 0.2-0.3 —Å–µ–∫—É–Ω–¥—ã
            task.wait(0.25)
        end
        
        if sellingActive then
            -- –ö–æ—Ä–æ—Ç–∫–∞—è –ø–∞—É–∑–∞ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –ø—Ä–æ–≤–µ—Ä–∫–æ–π backpack
            task.wait(0.1)
        end
    end
end

-- ====== –º–≥–Ω–æ–≤–µ–Ω–Ω–∞—è —Ä–µ–∞–∫—Ü–∏—è –Ω–∞ –Ω–æ–≤—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã ======
local function setupFastMonitor()
    backpack.ChildAdded:Connect(function(child)
        task.wait(0.1) -- –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
        
        if child:IsA("Tool") and string.find(child.Name:lower(), keyword:lower()) then
            local success, value = pcall(function()
                return extractValue(extractTexts(child))
            end)
            
            if success and value and value < MIN_VALUE then
                print(("üì¶ –ù–æ–≤—ã–π –ø—Ä–µ–¥–º–µ—Ç –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏: %s ($%d/s)"):format(child.Name, value))
                -- –ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ –∑–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–¥–∞–∂—É –µ—Å–ª–∏ –∞–≤—Ç–æ–ø—Ä–æ–¥–∞–∂–∞ –≤–∫–ª—é—á–µ–Ω–∞
                if sellingActive then
                    task.spawn(fastSellLoop)
                end
            end
        end
    end)
end

-- ====== –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –ö–ù–û–ü–û–ö ======
toggleButton.MouseButton1Click:Connect(function()
    sellingActive = not sellingActive
    updateButtons()
    
    if sellingActive then
        print("üöÄ –ê–í–¢–û–ü–†–û–î–ê–ñ–ê –í–ö–õ–Æ–ß–ï–ù–ê")
        task.spawn(fastSellLoop)
    else
        print("üõë –ê–í–¢–û–ü–†–û–î–ê–ñ–ê –í–´–ö–õ–Æ–ß–ï–ù–ê")
    end
end)

buyButton.MouseButton1Click:Connect(function()
    buyingActive = not buyingActive
    updateButtons()
    
    if buyingActive then
        print("üõí –ê–í–¢–û–ü–û–ö–£–ü–ö–ê –í–ö–õ–Æ–ß–ï–ù–ê")
        task.spawn(autoBuyLoop)
    else
        print("üõë –ê–í–¢–û–ü–û–ö–£–ü–ö–ê –í–´–ö–õ–Æ–ß–ï–ù–ê")
    end
end)

gearButton.MouseButton1Click:Connect(function()
    gearingActive = not gearingActive
    updateButtons()
    
    if gearingActive then
        print("üéí –ê–í–¢–û–ü–û–ö–£–ü–ö–ê –°–ù–ê–†–Ø–ñ–ï–ù–ò–Ø –í–ö–õ–Æ–ß–ï–ù–ê")
        task.spawn(autoGearLoop)
    else
        print("üõë –ê–í–¢–û–ü–û–ö–£–ü–ö–ê –°–ù–ê–†–Ø–ñ–ï–ù–ò–Ø –í–´–ö–õ–Æ–ß–ï–ù–ê")
    end
end)

miniButton.MouseButton1Click:Connect(function()
    toggleGUI()
end)

closeButton.MouseButton1Click:Connect(function()
    closeGUI()
end)

setupFastMonitor()
updateButtons()
print("‚úÖ GUI –∑–∞–≥—Ä—É–∂–µ–Ω–∞!")
print("üìå M - –ø–æ–∫–∞–∑–∞—Ç—å/—Å–∫—Ä—ã—Ç—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å")
print("‚ùå X - –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–∫—Ä—ã—Ç—å GUI")
print("üéØ –ü–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–π—Ç–µ –∑–∞ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏–ª–∏ –∫–Ω–æ–ø–∫—É M –¥–ª—è –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è")
print("üõí –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏: AutoSell | AutoBuy | AutoGear")
